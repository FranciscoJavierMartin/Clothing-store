{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { collectionsCollection } from '../../constansts/collectionNames';\nimport { FETCH_COLLECTIONS_START, UPDATE_COLLECTIONS, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from './shopTypes';\nexport const updateCollections = collectionsMap => ({\n  type: UPDATE_COLLECTIONS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStart = () => ({\n  type: FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(collectionsCollection);\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/francisco/Developer/React/clothing-shop/client/src/store/shop/shopActions.ts"],"names":["firestore","convertCollectionsSnapshotToMap","collectionsCollection","FETCH_COLLECTIONS_START","UPDATE_COLLECTIONS","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","updateCollections","collectionsMap","type","payload","fetchCollectionsStart","fetchCollectionsSuccess","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AACA,SACEA,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SACEC,uBADF,EAEEC,kBAFF,EAGEC,yBAHF,EAIEC,yBAJF,QAKO,aALP;AAOA,OAAO,MAAMC,iBAAiB,GAAIC,cAAD,KAAmC;AAClEC,EAAAA,IAAI,EAAEL,kBAD4D;AAElEM,EAAAA,OAAO,EAAEF;AAFyD,CAAnC,CAA1B;AAKP,OAAO,MAAMG,qBAAqB,GAAG,OAAgB;AACnDF,EAAAA,IAAI,EAAEN;AAD6C,CAAhB,CAA9B;AAIP,OAAO,MAAMS,uBAAuB,GAAIJ,cAAD,KAAmC;AACxEC,EAAAA,IAAI,EAAEJ,yBADkE;AAExEK,EAAAA,OAAO,EAAEF;AAF+D,CAAnC,CAAhC;AAKP,OAAO,MAAMK,uBAAuB,GAAIC,YAAD,KAAoC;AACzEL,EAAAA,IAAI,EAAEH,yBADmE;AAEzEI,EAAAA,OAAO,EAAEI;AAFgE,CAApC,CAAhC;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAmB;AACxB,UAAMC,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqBhB,qBAArB,CAAtB;AACAc,IAAAA,QAAQ,CAACL,qBAAqB,EAAtB,CAAR;AACAM,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAgD;AACpD,YAAMb,cAAc,GAAGP,+BAA+B,CAACoB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACJ,uBAAuB,CAACJ,cAAD,CAAxB,CAAR;AACD,KALH,EAMGc,KANH,CAMUC,KAAD,IAAgBP,QAAQ,CAACH,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CANjC;AAOD,GAVD;AAWD,CAZM","sourcesContent":["import { IAction } from '../../interfaces/actions';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils';\nimport { collectionsCollection } from '../../constansts/collectionNames';\nimport {\n  FETCH_COLLECTIONS_START,\n  UPDATE_COLLECTIONS,\n  FETCH_COLLECTIONS_SUCCESS,\n  FETCH_COLLECTIONS_FAILURE\n} from './shopTypes';\n\nexport const updateCollections = (collectionsMap: any): IAction => ({\n  type: UPDATE_COLLECTIONS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionsStart = (): IAction => ({\n  type: FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap: any): IAction => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = (errorMessage: string): IAction => ({\n  type: FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch: any) => {\n    const collectionRef = firestore.collection(collectionsCollection);\n    dispatch(fetchCollectionsStart());\n    collectionRef\n      .get()\n      .then((snapshot: firebase.firestore.QuerySnapshot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch((error: any) => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}