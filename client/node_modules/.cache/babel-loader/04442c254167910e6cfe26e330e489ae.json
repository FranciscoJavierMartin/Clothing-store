{"ast":null,"code":"var _jsxFileName = \"/Users/francisco/Developer/React/clothing-shop/client/src/pages/collection/CollectionPage.tsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport CollectionItem from '../../components/collection-item/CollectionItem';\nimport { selectCollection, selectIsCollectionsLoaded } from '../../store/shop/shopSelectors';\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from './CollectionPage.styles';\n\nconst CollectionPage = props => {\n  let res;\n  const urlParam = props.match.params.collectionId;\n  const isCollectionLoaded = useSelector(selectIsCollectionsLoaded);\n  const collection = useSelector(state => selectCollection(state, urlParam));\n\n  if (isCollectionLoaded) {\n    res = React.createElement(CollectionPageContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(CollectionTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, collection.title), React.createElement(CollectionItemsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, collection.items.map(item => React.createElement(CollectionItem, {\n      key: item.id,\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))));\n  } else {\n    res = React.createElement(CollectionPageContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Not found\"));\n  }\n\n  return res;\n};\n\nexport default CollectionPage;","map":{"version":3,"sources":["/Users/francisco/Developer/React/clothing-shop/client/src/pages/collection/CollectionPage.tsx"],"names":["React","useSelector","CollectionItem","selectCollection","selectIsCollectionsLoaded","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","CollectionPage","props","res","urlParam","match","params","collectionId","isCollectionLoaded","collection","state","title","items","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,cAAP,MAA2B,iDAA3B;AACA,SACEC,gBADF,EAEEC,yBAFF,QAGO,gCAHP;AAOA,SACEC,uBADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,yBAJP;;AAaA,MAAMC,cAA8C,GAClDC,KADqD,IAElD;AACH,MAAIC,GAAJ;AACA,QAAMC,QAAQ,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,YAApC;AACA,QAAMC,kBAAkB,GAAGd,WAAW,CACpCG,yBADoC,CAAtC;AAGA,QAAMY,UAAU,GAAGf,WAAW,CAAoCgB,KAAK,IACrEd,gBAAgB,CAACc,KAAD,EAAQN,QAAR,CADY,CAA9B;;AAIA,MAAII,kBAAJ,EAAwB;AACtBL,IAAAA,GAAG,GACD,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBM,UAAU,CAAGE,KAA/B,CADF,EAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,UAAU,CAAGG,KAAb,CAAmBC,GAAnB,CAAuBC,IAAI,IAC1B,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,MAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAFF,CADF;AAUD,GAXD,MAWO;AACLX,IAAAA,GAAG,GACD,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF;AAKD;;AAED,SAAOA,GAAP;AACD,CAhCD;;AAkCA,eAAeF,cAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport CollectionItem from '../../components/collection-item/CollectionItem';\nimport {\n  selectCollection,\n  selectIsCollectionsLoaded\n} from '../../store/shop/shopSelectors';\nimport { IGlobalState } from '../../interfaces/states';\nimport { IShopSection } from '../../interfaces/common';\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './CollectionPage.styles';\n\ninterface ICollectionPageParams {\n  collectionId: string;\n}\n\ninterface ICollectionPageProps\n  extends RouteComponentProps<ICollectionPageParams> {}\n\nconst CollectionPage: React.FC<ICollectionPageProps> = (\n  props: ICollectionPageProps\n) => {\n  let res: any;\n  const urlParam = props.match.params.collectionId;\n  const isCollectionLoaded = useSelector<IGlobalState, boolean>(\n    selectIsCollectionsLoaded\n  );\n  const collection = useSelector<IGlobalState, IShopSection | null>(state =>\n    selectCollection(state, urlParam)\n  );\n\n  if (isCollectionLoaded) {\n    res = (\n      <CollectionPageContainer>\n        <CollectionTitle>{collection!!.title}</CollectionTitle>\n        <CollectionItemsContainer>\n          {collection!!.items.map(item => (\n            <CollectionItem key={item.id} item={item} />\n          ))}\n        </CollectionItemsContainer>\n      </CollectionPageContainer>\n    );\n  } else {\n    res = (\n      <CollectionPageContainer>\n        <h1>Not found</h1>\n      </CollectionPageContainer>\n    );\n  }\n\n  return res;\n};\n\nexport default CollectionPage;\n"]},"metadata":{},"sourceType":"module"}