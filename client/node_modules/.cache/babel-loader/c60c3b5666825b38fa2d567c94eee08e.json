{"ast":null,"code":"import _defineProperty from \"/Users/francisco/Developer/React/clothing-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { TOGGLE_CART_HIDDEN, ADD_ITEM, CLEAR_ITEM_FROM_CART, REMOVE_ITEM, CLEAR_CART } from '../actions/cartActions';\nconst initialState = {\n  hidden: true,\n  cartItems: []\n};\n\nfunction addItemToCart(cartItems, cartItemToAdd) {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n  let res;\n\n  if (existingCartItem) {\n    res = cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity ? cartItem.quantity + 1 : 1\n    }) : cartItem);\n  } else {\n    res = [...cartItems, _objectSpread({}, cartItemToAdd, {\n      quantity: 1\n    })];\n  }\n\n  return res;\n}\n\nfunction removeItemFromCart(cartItems, cartItemToRemove) {\n  let newCartItems;\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem && existingCartItem.quantity === 1) {\n    newCartItems = cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } else {\n    newCartItems = cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity && cartItem.quantity - 1\n    }) : cartItem);\n  }\n\n  return newCartItems;\n}\n\nexport default ((state = initialState, action) => {\n  let newState;\n\n  switch (action.type) {\n    case TOGGLE_CART_HIDDEN:\n      newState = _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n      break;\n\n    case ADD_ITEM:\n      newState = _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n      break;\n\n    case CLEAR_ITEM_FROM_CART:\n      newState = _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n      break;\n\n    case CLEAR_CART:\n      newState = _objectSpread({}, state, {\n        cartItems: []\n      });\n      break;\n\n    case REMOVE_ITEM:\n      newState = _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n      break;\n\n    default:\n      newState = state;\n  }\n\n  return newState;\n});","map":{"version":3,"sources":["/Users/francisco/Developer/React/clothing-shop/client/src/store/reducers/cartReducer.ts"],"names":["TOGGLE_CART_HIDDEN","ADD_ITEM","CLEAR_ITEM_FROM_CART","REMOVE_ITEM","CLEAR_CART","initialState","hidden","cartItems","addItemToCart","cartItemToAdd","existingCartItem","find","cartItem","id","res","map","quantity","removeItemFromCart","cartItemToRemove","newCartItems","filter","state","action","newState","type","payload"],"mappings":"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","sourcesContent":["import { ICartState } from '../../interfaces/states';\nimport { IAction } from '../../interfaces/actions';\nimport {\n  TOGGLE_CART_HIDDEN,\n  ADD_ITEM,\n  CLEAR_ITEM_FROM_CART,\n  REMOVE_ITEM,\n  CLEAR_CART\n} from '../actions/cartActions';\nimport { IShopItem } from '../../interfaces/common';\n\nconst initialState: ICartState = {\n  hidden: true,\n  cartItems: []\n};\n\nfunction addItemToCart(\n  cartItems: IShopItem[],\n  cartItemToAdd: IShopItem\n): IShopItem[] {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToAdd.id\n  );\n  let res;\n  if (existingCartItem) {\n    res = cartItems.map(cartItem =>\n      cartItem.id === cartItemToAdd.id\n        ? {\n            ...cartItem,\n            quantity: cartItem.quantity ? cartItem.quantity + 1 : 1\n          }\n        : cartItem\n    );\n  } else {\n    res = [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n  }\n  return res;\n}\n\nfunction removeItemFromCart(\n  cartItems: IShopItem[],\n  cartItemToRemove: IShopItem\n) {\n  let newCartItems: IShopItem[];\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToRemove.id\n  );\n\n  if (existingCartItem && existingCartItem.quantity === 1) {\n    newCartItems = cartItems.filter(\n      cartItem => cartItem.id !== cartItemToRemove.id\n    );\n  } else {\n    newCartItems = cartItems.map<IShopItem>(cartItem =>\n      cartItem.id === cartItemToRemove.id\n        ? {\n            ...cartItem,\n            quantity: cartItem.quantity && cartItem.quantity - 1\n          }\n        : cartItem\n    );\n  }\n\n  return newCartItems;\n}\n\nexport default (\n  state: ICartState = initialState,\n  action: IAction\n): ICartState => {\n  let newState: ICartState;\n\n  switch (action.type) {\n    case TOGGLE_CART_HIDDEN:\n      newState = {\n        ...state,\n        hidden: !state.hidden\n      };\n      break;\n    case ADD_ITEM:\n      newState = {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n      break;\n    case CLEAR_ITEM_FROM_CART:\n      newState = {\n        ...state,\n        cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n        )\n      };\n      break;\n    case CLEAR_CART:\n      newState = {\n        ...state,\n        cartItems: []\n      };\n      break;\n    case REMOVE_ITEM:\n      newState = {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n      break;\n    default:\n      newState = state;\n  }\n\n  return newState;\n};\n"]},"metadata":{},"sourceType":"module"}