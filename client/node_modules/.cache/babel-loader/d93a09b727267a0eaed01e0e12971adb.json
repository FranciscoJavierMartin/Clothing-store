{"ast":null,"code":"import _defineProperty from \"/Users/francisco/Developer/React/clothing-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from './shopActions';\nimport { UPDATE_COLLECTIONS } from './shopActions';\nconst initialState = {\n  collections: null,\n  isFetching: false,\n  errorMessage: ''\n};\nexport default ((state = initialState, action) => {\n  let newState;\n\n  switch (action.type) {\n    case FETCH_COLLECTIONS_START:\n      newState = _objectSpread({}, state, {\n        isFetching: true\n      });\n      break;\n\n    case FETCH_COLLECTIONS_SUCCESS:\n      newState = _objectSpread({}, state, {\n        isFetching: false,\n        collections: action.payload\n      });\n      break;\n\n    case FETCH_COLLECTIONS_FAILURE:\n      newState = _objectSpread({}, state, {\n        isFetching: false,\n        errorMessage: action.payload\n      });\n      break;\n\n    case UPDATE_COLLECTIONS:\n      newState = _objectSpread({}, state, {\n        collections: action.payload\n      });\n      break;\n\n    default:\n      newState = state;\n  }\n\n  return newState;\n});","map":{"version":3,"sources":["/Users/francisco/Developer/React/clothing-shop/client/src/store/shop/shopReducer.ts"],"names":["FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","UPDATE_COLLECTIONS","initialState","collections","isFetching","errorMessage","state","action","newState","type","payload"],"mappings":";;;;;;AAAA,SACEA,uBADF,EAEEC,yBAFF,EAGEC,yBAHF,QAIO,eAJP;AAOA,SAASC,kBAAT,QAAmC,eAAnC;AAEA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,WAAW,EAAE,IADkB;AAE/BC,EAAAA,UAAU,EAAE,KAFmB;AAG/BC,EAAAA,YAAY,EAAE;AAHiB,CAAjC;AAMA,gBAAe,CACbC,KAAiB,GAAGJ,YADP,EAEbK,MAFa,KAGE;AACf,MAAIC,QAAJ;;AAEA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKX,uBAAL;AACEU,MAAAA,QAAQ,qBACHF,KADG;AAENF,QAAAA,UAAU,EAAE;AAFN,QAAR;AAIA;;AACF,SAAKL,yBAAL;AACES,MAAAA,QAAQ,qBACHF,KADG;AAENF,QAAAA,UAAU,EAAE,KAFN;AAGND,QAAAA,WAAW,EAAEI,MAAM,CAACG;AAHd,QAAR;AAKA;;AACA,SAAKV,yBAAL;AACEQ,MAAAA,QAAQ,qBACHF,KADG;AAENF,QAAAA,UAAU,EAAE,KAFN;AAGNC,QAAAA,YAAY,EAAEE,MAAM,CAACG;AAHf,QAAR;AAKA;;AACJ,SAAKT,kBAAL;AACEO,MAAAA,QAAQ,qBACHF,KADG;AAENH,QAAAA,WAAW,EAAEI,MAAM,CAACG;AAFd,QAAR;AAIA;;AACF;AACEF,MAAAA,QAAQ,GAAGF,KAAX;AA5BJ;;AA+BA,SAAOE,QAAP;AACD,CAtCD","sourcesContent":["import {\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n  FETCH_COLLECTIONS_FAILURE\n} from './shopActions';\nimport { IShopState } from '../../interfaces/states';\nimport { IAction } from '../../interfaces/actions';\nimport { UPDATE_COLLECTIONS } from './shopActions';\n\nconst initialState: IShopState = {\n  collections: null,\n  isFetching: false,\n  errorMessage: ''\n};\n\nexport default (\n  state: IShopState = initialState,\n  action: IAction\n): IShopState => {\n  let newState: IShopState;\n\n  switch (action.type) {\n    case FETCH_COLLECTIONS_START:\n      newState = {\n        ...state,\n        isFetching: true\n      };\n      break;\n    case FETCH_COLLECTIONS_SUCCESS:\n      newState = {\n        ...state,\n        isFetching: false,\n        collections: action.payload\n      };\n      break;\n      case FETCH_COLLECTIONS_FAILURE:\n        newState = {\n          ...state,\n          isFetching: false,\n          errorMessage: action.payload\n        }\n        break;\n    case UPDATE_COLLECTIONS:\n      newState = {\n        ...state,\n        collections: action.payload\n      };\n      break;\n    default:\n      newState = state;\n  }\n\n  return newState;\n};\n"]},"metadata":{},"sourceType":"module"}