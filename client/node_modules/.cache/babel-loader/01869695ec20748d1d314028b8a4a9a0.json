{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { collectionsCollection } from '../../constansts/collectionNames';\nexport const UPDATE_COLLECTIONS = 'UPDATE_COLLECTIONS';\nexport const FETCH_COLLECTIONS_START = 'FETCH_COLLECTIONS_START';\nexport const FETCH_COLLECTIONS_SUCCESS = 'FETCH_COLLECTIONS_SUCCESS';\nexport const FETCH_COLLECTIONS_FAILURE = 'FETCH_COLLECTIONS_FAILURE';\nexport const updateCollections = collectionsMap => ({\n  type: UPDATE_COLLECTIONS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStart = () => ({\n  type: FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(collectionsCollection);\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/francisco/Developer/React/clothing-shop/client/src/store/shop/shopActions.ts"],"names":["firestore","convertCollectionsSnapshotToMap","collectionsCollection","UPDATE_COLLECTIONS","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","updateCollections","collectionsMap","type","payload","fetchCollectionsStart","fetchCollectionsSuccess","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AACA,SAASA,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AAEP,OAAO,MAAMC,iBAAiB,GAAIC,cAAD,KAAmC;AAClEC,EAAAA,IAAI,EAAEN,kBAD4D;AAElEO,EAAAA,OAAO,EAAEF;AAFyD,CAAnC,CAA1B;AAKP,OAAO,MAAMG,qBAAqB,GAAG,OAAgB;AACnDF,EAAAA,IAAI,EAAEL;AAD6C,CAAhB,CAA9B;AAIP,OAAO,MAAMQ,uBAAuB,GAAIJ,cAAD,KAAmC;AACxEC,EAAAA,IAAI,EAAEJ,yBADkE;AAExEK,EAAAA,OAAO,EAAEF;AAF+D,CAAnC,CAAhC;AAKP,OAAO,MAAMK,uBAAuB,GAAIC,YAAD,KAAoC;AACzEL,EAAAA,IAAI,EAAEH,yBADmE;AAEzEI,EAAAA,OAAO,EAAEI;AAFgE,CAApC,CAAhC;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAmB;AACxB,UAAMC,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqBhB,qBAArB,CAAtB;AACAc,IAAAA,QAAQ,CAACL,qBAAqB,EAAtB,CAAR;AACAM,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAgD;AACvE,YAAMb,cAAc,GAAGP,+BAA+B,CAACoB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACJ,uBAAuB,CAACJ,cAAD,CAAxB,CAAR;AACD,KAHD,EAGGc,KAHH,CAGUC,KAAD,IAAgBP,QAAQ,CAACH,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAHjC;AAID,GAPD;AAQD,CATM","sourcesContent":["import { IAction } from '../../interfaces/actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { collectionsCollection } from '../../constansts/collectionNames';\nexport const UPDATE_COLLECTIONS = 'UPDATE_COLLECTIONS';\nexport const FETCH_COLLECTIONS_START = 'FETCH_COLLECTIONS_START';\nexport const FETCH_COLLECTIONS_SUCCESS = 'FETCH_COLLECTIONS_SUCCESS';\nexport const FETCH_COLLECTIONS_FAILURE = 'FETCH_COLLECTIONS_FAILURE';\n\nexport const updateCollections = (collectionsMap: any): IAction => ({\n  type: UPDATE_COLLECTIONS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionsStart = (): IAction => ({\n  type: FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap: any): IAction => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n}) \n\nexport const fetchCollectionsFailure = (errorMessage: string): IAction => ({\n  type: FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch: any) => {\n    const collectionRef = firestore.collection(collectionsCollection);\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then((snapshot: firebase.firestore.QuerySnapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch((error: any) => dispatch(fetchCollectionsFailure(error.message)))\n  }\n}"]},"metadata":{},"sourceType":"module"}